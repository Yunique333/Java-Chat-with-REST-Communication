/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package firebaseComm;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import java.awt.event.WindowEvent;
import java.net.*;
import java.io.*;
import javax.swing.JFrame;
import org.apache.commons.io.IOUtils;
import org.json.JSONException;
import org.json.JSONObject;
/**
 *
 * @author Yunique
 */
public class FirebaseComm extends javax.swing.JFrame {

    /**
     * Creates new form testPost
     */
    static DataInputStream din;
    static DataOutputStream dout;
    
    public FirebaseComm(){
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        msg_post = new javax.swing.JButton();
        msg_name = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msg_area.setEditable(false);
        msg_area.setColumns(20);
        msg_area.setRows(5);
        msg_area.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                msg_areaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(msg_area);

        msg_text.setText("Message here");
        msg_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                msg_textFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                msg_textFocusLost(evt);
            }
        });

        msg_post.setText("Send");
        msg_post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_postActionPerformed(evt);
            }
        });

        msg_name.setText("Input Your Name Here");
        msg_name.setToolTipText("");
        msg_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                msg_nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                msg_nameFocusLost(evt);
            }
        });
        msg_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_nameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msg_name, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msg_post, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(msg_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msg_post))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void msg_postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_postActionPerformed
        // TODO add your handling code here:
        String query_url = "https://realtimechat-acdde-default-rtdb.asia-southeast1.firebasedatabase.app/users.json";
        String msgout = "";
        String name="";
        name=msg_name.getText().trim();
        msgout = msg_text.getText().trim();
        String json = "{ \"msg\" : \""+msgout+"\", \"name\" :\""+name+"\"}";
           try {
           URL url = new URL(query_url);
           HttpURLConnection conn = (HttpURLConnection) url.openConnection();
           conn.setConnectTimeout(5000);
           conn.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
           conn.setDoOutput(true);
           conn.setDoInput(true);
           conn.setRequestMethod("PUT");
           OutputStream os = conn.getOutputStream();
           os.write(json.getBytes("UTF-8"));
           os.close(); 
           // read the response
           InputStream in = new BufferedInputStream(conn.getInputStream());
//           String result = IOUtils.toString(in, "UTF-8");
//           System.out.println(result);
//           System.out.println("result after Reading JSON Response");
//           JSONObject myResponse = new JSONObject(result);
//           System.out.println("jsonrpc- "+myResponse.getString("jsonrpc"));
//           System.out.println("id- "+myResponse.getInt("id"));
//           System.out.println("result- "+myResponse.getString("result"));
           in.close();
           conn.disconnect();
           } catch (Exception e) {
   			System.out.println(e);
            }
           //msg_area.setText(msg_area.getText().trim() + "\n "+name+" : " + msgout);

    }//GEN-LAST:event_msg_postActionPerformed

    private void msg_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msg_nameActionPerformed

    private void msg_areaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_msg_areaAncestorAdded
        // TODO add your handling code here:
        
    }//GEN-LAST:event_msg_areaAncestorAdded

    private void msg_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_msg_nameFocusGained
        // TODO add your handling code here:
        if(msg_name.getText().trim().equals("Input Your Name Here")){
            msg_name.setText("");
        }
    }//GEN-LAST:event_msg_nameFocusGained

    private void msg_nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_msg_nameFocusLost
        // TODO add your handling code here:
        if(msg_name.getText().trim().equals("")){
            msg_name.setText("Input Your Name Here");
        }
    }//GEN-LAST:event_msg_nameFocusLost

    private void msg_textFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_msg_textFocusGained
        // TODO add your handling code here:
        if(msg_text.getText().trim().equals("Message here")){
            msg_text.setText("");
        }
    }//GEN-LAST:event_msg_textFocusGained

    private void msg_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_msg_textFocusLost
        // TODO add your handling code here:
        if(msg_text.getText().trim().equals("")){
            msg_text.setText("Message here");
        }
    }//GEN-LAST:event_msg_textFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, JSONException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirebaseComm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirebaseComm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirebaseComm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirebaseComm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirebaseComm().setVisible(true);
            }
        });
        FileInputStream fis = new FileInputStream("src/key.json");

        FirebaseOptions options = new FirebaseOptions.Builder()
                .setCredentials(GoogleCredentials.fromStream(fis))
                .setDatabaseUrl("https://realtimechat-acdde-default-rtdb.asia-southeast1.firebasedatabase.app/")
                .build();

        FirebaseApp.initializeApp(options);

        //FirebaseDatabase db = FirebaseDatabase.getInstance();
        DatabaseReference ref = FirebaseDatabase.getInstance().getReference("/users");
        ref.addValueEventListener(new ValueEventListener() {
            public void onDataChange(DataSnapshot dataSnapshot) {                
                Object name = dataSnapshot.child("name").getValue();
                Object msg = dataSnapshot.child("msg").getValue();
                System.out.println(name+" : "+msg);
                
                    if(name!=null && msg!=null){
                        msg_area.setText(msg_area.getText().trim()+"\n"+name+" : "+msg);
                    }
                    if(msg.equals("exit")){
                        ref.removeValueAsync();
//                        ref.child("name").removeValueAsync();
//                        ref.child("msg").removeValueAsync();
                        System.exit(0);
                    }
            }
            

            public void onCancelled(DatabaseError error) {
                System.out.print("Error: " + error.getMessage());
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JTextField msg_name;
    private javax.swing.JButton msg_post;
    private javax.swing.JTextField msg_text;
    // End of variables declaration//GEN-END:variables
}
